spring:
  #  Self-Signed Certificate is created, but we need a real certificate
  #  profiles:
  #    active: tls
  cors:
    allowed-origins: '*'
    allowed-methods: '*'
    allowed-headers: '*'
    allow-credentials: true
  mvc:
    throw-exception-if-no-handler-found: true
    dispatch-options-request: true
    static-path-pattern: /userProfiles/**
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  liquibase:
    change-log: classpath:liquibase/master.xml
  jpa:
    open-in-view: false
    properties:
      hibernate:
        default_schema: public
  mail:
    host: ${SPRING_MAIL_HOST}
    port: ${SPRING_MAIL_PORT}
    username: ${SPRING_MAIL_USERNAME}
    password: ${SPRING_MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  web:
    resources:
      static-locations: classpath:/userProfiles/

logging:
  level:
    com:
      example:
        omega: DEBUG
    org:
      springframework: DEBUG

application:
  name: omega
  version: 1.0.0-SNAPSHOT

## /swagger-ui.html -> explore
springdoc:
  swagger-ui:
    disable-swagger-default-url: true
    display-request-duration: true
    doc-expansion: none
    configUrl: /swagger-ui.html
    path: /swagger-ui.html
  api-docs:
    path: /swagger-ui.html

management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          [
            'health',
            'info',
          ]

omega:
  app:
    jwt-secret: bestSecretKeyEver
    jwt-expiration-ms: 604800000
    jwt-refresh-expirations-ms: 604800000

google-authenticator:
  secret-phone: ${GOOGLE_AUTHENTICATOR_SECRET_PHONE}

javers:
  newObjectSnapshot: true